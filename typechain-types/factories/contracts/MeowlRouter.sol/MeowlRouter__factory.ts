/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MeowlRouter,
  MeowlRouterInterface,
} from "../../../contracts/MeowlRouter.sol/MeowlRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualAmountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualAmountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a080604052346100235733608052610b3d90816100298239608051816109230152f35b600080fdfe6080604052600436101561087f575b361561087d576000803560601c9080806006602160991b01841480610874575b156107b357509050620186a0610043346109f6565b049061004f8234610a0d565b6006602160991b013b156104ea57604051630d0e30db60e41b8152600081600481856006602160991b015af180156107a757610793575b5060008091604051602081019163a9059cbb60e01b835260283560601c60248301526044820152604481526100ba816108da565b5190826006602160991b015af16100cf610a2e565b50156107585733905b604051630240bc6b60e21b815290606082600481602835841c5afa91821561074b57819082936106ef575b5060143560601c8610926001600160701b0390811692911683156106ea57915b6040516370a0823160e01b815260283560601c60048201526020816024818b5afa80156106df57849084906106a9575b61015d9250610a0d565b938415610650578315801580610647575b156105f1576103e5918287029187830484036105dd578284868a0202048514831517156105c7576103e88088029788041417156105b35781860186116105b3578186011561059d571561058e57848101868402830204845b6040516370a0823160e01b81526001600160a01b038a1660048201529160208360248160143560601c5afa92831561058357879361054f575b50604051906020820182811067ffffffffffffffff8211176105395760405287825260283560601c3b156105355760405163022c0d9f60e01b8152600481019390935260248301526001600160a01b038a166044830152608060648301528051608483018190528791839190835b82811061051a57505081818460a4809484010152601f801991011681010301818360283560601c5af180156104f757908691610502575b50506040516370a0823160e01b81526001600160a01b03891660048201529060208260248160143560601c5afa80156104f75786906104be575b6102e89250610a0d565b96603c3560801c8810610483576001600160a01b0316301461034f575b7f9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e60a08a8a8a8a60405193845260143560601c6020850152604084015260608301526080820152a1005b939650919290919060143560601c6006602160991b010361042b576006602160991b013b1561042757604051632e1a7d4d60e01b81529601918402020460048501819052938181602481836006602160991b015af1801561041c57610405575b5050918160a0936103f96103f3620186a06103eb7f9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e99976109f6565b048095610a0d565b33610abc565b91938193953880610305565b61040f82916108c6565b61041957806103af565b80fd5b6040513d84823e3d90fd5b8380fd5b5050505060a0925081620186a06104637f9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e96946109f6565b049161047e6104728484610a0d565b3360143560601c610a6e565b6103f9565b60405162461bcd60e51b8152602060048201526013602482015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b6044820152606490fd5b506020823d6020116104ef575b816104d8602093836108f6565b810103126104ea576102e891516102de565b600080fd5b3d91506104cb565b6040513d88823e3d90fd5b61050b906108c6565b6105165784386102a4565b8480fd5b602081830181015160a488840101528b95508694500161026d565b8780fd5b634e487b7160e01b600052604160045260246000fd5b9092506020813d60201161057b575b8161056b602093836108f6565b810103126104ea575191386101ff565b3d915061055e565b6040513d89823e3d90fd5b838582018785028402046101c6565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b85526011600452602485fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b6064820152608490fd5b5082151561016e565b60405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b6064820152608490fd5b50506020813d6020116106d7575b816106c4602093836108f6565b810103126104ea578361015d9151610153565b3d91506106b7565b6040513d85823e3d90fd5b610123565b9250506060823d606011610743575b8161070b606093836108f6565b810103126104195761071c82610a1a565b604061072a60208501610a1a565b93015163ffffffff81160361073f5738610103565b5080fd5b3d91506106fe565b50604051903d90823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152721cd85999551c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b61079e9192506108c6565b60009081610086565b6040513d6000823e3d90fd5b60405160208101906323b872dd60e01b825233602482015260283560601c6044820152604c3560801c60648201526064815260a0810181811067ffffffffffffffff8211176108605760405251829182875af161080e610a2e565b501561081b5730906100d8565b60405162461bcd60e51b815260206004820152601760248201527f736166655472616e7366657246726f6d206661696c65640000000000000000006044820152606490fd5b634e487b7160e01b84526041600452602484fd5b5034151561002e565b005b6000803560e01c630cd865ec14610896575061000e565b34610419576020366003190112610419576004356001600160a01b038116810361073f576108c390610918565b80f35b67ffffffffffffffff811161053957604052565b6080810190811067ffffffffffffffff82111761053957604052565b90601f8019910116810190811067ffffffffffffffff82111761053957604052565b6001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036109cb57168061095d575061095b4733610abc565b565b6040516370a0823160e01b81523060048201529190602083602481845afa9283156107a757600093610998575b509161095b91923390610a6e565b6020813d82116109c3575b816109b0602093836108f6565b810103126104275751925061095b61098a565b3d91506109a3565b606460405162461bcd60e51b815260206004820152600460248201526373686f6f60e01b6044820152fd5b9061036b918281029281840414901517156105c757565b919082039182116105c757565b51906001600160701b03821682036104ea57565b3d15610a69573d9067ffffffffffffffff82116105395760405191610a5d601f8201601f1916602001846108f6565b82523d6000602084013e565b606090565b600092838093604051602081019363a9059cbb60e01b855260018060a01b038093166024830152604482015260448152610aa7816108da565b5193165af1610ab4610a2e565b501561075857565b600080809381935af115610acc57565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fdfea26469706673582212200e50db3afc6be4e9161a0dcf5a7df3f82f204addc80241db298efbdf77b58b1264736f6c63430008130033";

type MeowlRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeowlRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeowlRouter__factory extends ContractFactory {
  constructor(...args: MeowlRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MeowlRouter> {
    return super.deploy(overrides || {}) as Promise<MeowlRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MeowlRouter {
    return super.attach(address) as MeowlRouter;
  }
  override connect(signer: Signer): MeowlRouter__factory {
    return super.connect(signer) as MeowlRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeowlRouterInterface {
    return new utils.Interface(_abi) as MeowlRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeowlRouter {
    return new Contract(address, _abi, signerOrProvider) as MeowlRouter;
  }
}
