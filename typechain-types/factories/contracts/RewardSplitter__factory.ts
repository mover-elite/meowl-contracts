/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardSplitter,
  RewardSplitterInterface,
} from "../../contracts/RewardSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "weth_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "meowl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingPublic_",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingVested_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "meowl_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "vmeowl_",
        type: "address",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPublic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingVested",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vmeowl",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0346100ae57601f610c1638819003918201601f19168301916001600160401b038311848410176100b3578084926020946040528339810103126100ae57516001600160a01b039081811681036100ae576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3608052610b4c90816100ca823960805181818161023d01526106790152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c9081630153dec51461076957508063087bc228146106d55780630cd865ec146106a85780633fc8cef314610664578063715018a61461060a57806386d1a69f146102195780638da5cb5b146101f1578063d59ad218146101c8578063dc5c07f51461019f578063df54439b146101725763f2fde38b03610011573461016e57602036600319011261016e576100bc61078e565b906100c56107a4565b6001600160a01b0391821692831561011c575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461019b578160031936011261019b5760035490516001600160a01b039091168152602090f35b5080fd5b50503461019b578160031936011261019b5760015490516001600160a01b039091168152602090f35b50503461019b578160031936011261019b5760025490516001600160a01b039091168152602090f35b50503461019b578160031936011261019b57905490516001600160a01b039091168152602090f35b5091346104535780600319360112610453576102336107a4565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929047843b1561060657838691845192838092630d0e30db60e41b8252895af180156105f9576105e6575b5080600354169481600154169183519081806370a0823160e01b998a82528686830152602092839160249687915afa9081156105dc5788916105af575b5082855416828460025416868d8b51948593849283528b8301525afa9081156105a5578991610578575b50810190818111610566578115610552570461271090818102908082048314811517156105405788519b8c5230878d0152999a9899838a87818f5afa998a156104bb578b9a61050c575b5082908a02029089820414891517156104f85704948588039788116104e657865163a9059cbb60e01b8082526001600160a01b039290921686820190815260208101889052999a8b9a90919084908290819003604001818e865af180156104bb576104c9575b508360015416803b156104c5578a8091878b5180948193633c6b16ab60e01b9d8e84528d8401525af180156104bb57918b8b92869461049b575b506002548b5195865287166001600160a01b031689860190815260208101939093528492839190829060400103925af1801561049157610463575b50506002541692833b1561045f578680948651978895869485528401525af190811561045657506104435750f35b61044c906107fc565b6104535780f35b80fd5b513d84823e3d90fd5b8680fd5b8161048292903d1061048a575b61047a8183610826565b810190610848565b503880610415565b503d610470565b87513d8b823e3d90fd5b9092506104a99193506107fc565b6104b7578883918b386103da565b8980fd5b89513d8d823e3d90fd5b8a80fd5b6104df90843d861161048a5761047a8183610826565b50386103a0565b634e487b7160e01b8952601185528389fd5b84601187634e487b7160e01b600052526000fd5b9099508381813d8311610539575b6105248183610826565b810103126105345751988261033a565b600080fd5b503d61051a565b634e487b7160e01b8a5260118752858afd5b84601287634e487b7160e01b600052526000fd5b634e487b7160e01b8952601186528489fd5b90508281813d831161059e575b61058f8183610826565b810103126105345751386102f0565b503d610585565b88513d8b823e3d90fd5b90508181813d83116105d5575b6105c68183610826565b810103126105345751386102c6565b503d6105bc565b87513d8a823e3d90fd5b6105f2909391936107fc565b9138610289565b50505051903d90823e3d90fd5b8380fd5b83346104535780600319360112610453576106236107a4565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461019b578160031936011261019b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8334610453576020366003190112610453576106d26106c561078e565b6106cd6107a4565b6108a0565b80f35b83823461019b57608036600319011261019b576106f061078e565b6001600160a01b0390602435828116908190036107655760443590838216809203610761576064359380851680950361045f5761072b6107a4565b6bffffffffffffffffffffffff60a01b931683600154161760015582600254161760025581600354161760035582541617905580f35b8580fd5b8480fd5b9250503461016e578260031936011261016e57546001600160a01b0316815260209150f35b600435906001600160a01b038216820361053457565b6000546001600160a01b031633036107b857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161081057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761081057604052565b90816020910312610534575180151581036105345790565b3d1561089b573d9067ffffffffffffffff8211610810576040519161088f601f8201601f191660200184610826565b82523d6000602084013e565b606090565b6001600160a01b0316806108c45750600080808047335af1506108c1610860565b50565b604080516370a0823160e01b81523060048201526020928382602481845afa918215610a3757600092610a08575b50825163a9059cbb60e01b85820190815233602483015260448083019490945292815290610921606483610826565b83519184830183811067ffffffffffffffff8211176108105785528583527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564838701525161098093600091829182855af161097a610860565b91610a42565b8051908382159283156109f0575b5050501561099a575050565b60849250519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b610a009350820181019101610848565b38838161098e565b90918482813d8311610a30575b610a1f8183610826565b8101031261045357505190386108f2565b503d610a15565b83513d6000823e3d90fd5b91929015610aa45750815115610a56575090565b3b15610a5f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610ab75750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610afd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350610ada56fea2646970667358221220f263f6a92700b1c5d00deaf7010f990956c72c5811deeabb4f36f66736ac419964736f6c63430008130033";

type RewardSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardSplitter__factory extends ContractFactory {
  constructor(...args: RewardSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    weth_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardSplitter> {
    return super.deploy(weth_, overrides || {}) as Promise<RewardSplitter>;
  }
  override getDeployTransaction(
    weth_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(weth_, overrides || {});
  }
  override attach(address: string): RewardSplitter {
    return super.attach(address) as RewardSplitter;
  }
  override connect(signer: Signer): RewardSplitter__factory {
    return super.connect(signer) as RewardSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardSplitterInterface {
    return new utils.Interface(_abi) as RewardSplitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardSplitter {
    return new Contract(address, _abi, signerOrProvider) as RewardSplitter;
  }
}
